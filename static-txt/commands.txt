
rm <fileName> -> remove the file
git status -> shows the status of the cached files
git rm -> remove files, not the cached files. Only the ones that exist on commits.
git rm --cached -> removes the files that are on cache and still not added to the commit.
git commit -m "Message here" -> adds the commit with the changes to the repository.
git config --global --unset user.name -> un sets the config for global github. You can pass all the properties on the gitconfig.


git show <fileName> -> shows all the changes on a specific file.
git log <fileName> -> shows all the commits on the file with the comments.
git diff <idCommit> <idCommit2> -> shows the differences between 2 commits.
git diff -> changes between the staging vs the actual repository of git.

git reset <idCommit> --hard -> removes permanent the changes and does not saves on staging anything.
git reset <idCommit> --soft -> goes back to the commit but saves the changes on cache "stage".



LOG COMMANDS

git log --oneline - Te muestra el id commit y el título del commit.
git log --decorate- Te muestra donde se encuentra el head point en el log.
git log --stat - Explica el número de líneas que se cambiaron brevemente.
git log -p- Explica el número de líneas que se cambiaron y te muestra que se cambió en el contenido.
git shortlog - Indica que commits ha realizado un usuario, mostrando el usuario y el titulo de sus commits.
git log --graph --oneline --decorate y
git log --pretty=format:"%cn hizo un commit %h el dia %cd" - Muestra mensajes personalizados de los commits.
git log -3 - Limitamos el número de commits.
git log --after=“2018-1-2” ,
git log --after=“today” y
git log --after=“2018-1-2” --before=“today” - Commits para localizar por fechas.
git log --author=“Name Author” - Commits realizados por autor que cumplan exactamente con el nombre.
git log --grep=“INVIE” - Busca los commits que cumplan tal cual está escrito entre las comillas.
git log --grep=“INVIE” –i- Busca los commits que cumplan sin importar mayúsculas o minúsculas.
git log – index.html- Busca los commits en un archivo en específico.
git log -S “Por contenido”- Buscar los commits con el contenido dentro del archivo.
git log > log.txt - guardar los logs en un archivo txt


REMOTE COMMANDS

git remote add <nameOfConnection> <url>
git remote add origin https://github.com
git remote -v -> lists all the remotes paths
git remote set-url <nameOfConnection> <newUrl>

